name: Deploy Staging ðŸš€

on:
  push:
    branches:
      - main

jobs:
  deploy_staging:
    name : Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Jalankan script deployment via SSH
      - name: Execute deployment command
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          script: |
            # Check if APP_STG_PATH exists
            if [ -d "${{ vars.APP_STG_PATH }}" ]; then
              # Path exists, stop existing container, pull latest code
              cd ${{ vars.APP_STG_PATH }}
              sudo docker compose down pacmusic-stg
              git pull origin main
            else
              # Path does not exist, clone the repository
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone ${{ secrets.GIT_URL }} ${{ vars.APP_STG_PATH }}
              cd ${{ vars.APP_STG_PATH }}
            fi

            # Generate .env file with environment variables
            echo "APP_STG_PORT=${{ secrets.APP_STG_PORT }}" >> .env
            echo "MINIO_STG_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
            echo "MINIO_STG_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env

            # Run Docker Compose to deploy the application
            sudo docker-compose up pacmusic-stg --build --detach 

      - name: Verify Deployment
        run: |
          sleep 20
          curl -f ${{ secrets.STG_URL }}